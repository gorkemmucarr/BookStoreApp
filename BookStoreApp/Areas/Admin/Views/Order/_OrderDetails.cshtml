@model Order
@{
    var total = Model.Lines.Sum(p => p.Book.Price * p.Quantity);
}

<div class="row shadow my-5">
    <div class="col-md-3 border-2 border-dark p-3 bg-light shadow">
        <h3 class="display-6 text-center">
            <i class="fa fa-address-book text-danger"></i>
            @Model?.Name
        </h3>
        <p>@Model?.Line</p>
        <p>@Model?.City</p>
        <p class="rounded p-3">
            <span class="bg-warning p-2">Shipped</span>
            <span class="bg-info p-2">@(Model.Shipped ? "Completed" : "In Progress")</span>
        </p>
    </div>
    <div class="col-md-9">
        <h3 class="display-6 text-center mt-4">Cart</h3>
        <ul class="list-group">
            @foreach (var cartItem in Model?.Lines)
            {
                <li class="list-group-item d-flex justify-content-between brand">
                    @cartItem.Book.BookName
                    <b>@cartItem.Book.BookName</b>
                    <b>
                        @cartItem.Quantity * @cartItem.Book.Price.ToString("c2")
                        =@((cartItem.Quantity * cartItem.Book.Price).ToString("c2"))
                    </b>
                </li>
            }
            <li class="list-group-item d-flex justify-content-between text-danger">
                Total
                <b>@total.ToString("c2")</b>
            </li>
        </ul>
        <div class="text-center mt-2 p-2">
            <form method="post" asp-action="Complete">
                <input type="hidden" name="id" value="@Model.OrderId" />
                <button class="btn btn-primary" type="submit" disabled="@Model.Shipped">Complete</button>
            </form>
        </div>
    </div>
</div>